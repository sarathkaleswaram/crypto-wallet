image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"
  ANDROID_NDK: "r18b"
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  - echo y | android-sdk-linux/tools/bin/sdkmanager 'cmake;3.10.2.4988404' >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager 'ndk-bundle' >/dev/null
  - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle

stages:
  - build

lintDebug:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintBrdDebug -PbuildDir=lint
  only:
    - develop
  artifacts:
    paths:
    - app/lint/reports/

assembleDebug:
  stage: build
  script:
    - ./gradlew assembleDebug
  only:
    - develop
  artifacts:
    paths:
    - app/build/outputs/

